#!/bin/bash
#
#    rabbitmq-relations - relations to be used by formula, referenced
#                         via symlink
#
#    Copyright (C) 2011  Canonical Ltd.
#    Author: Adam Gandelman <adam.gandelman@canonical.com>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

set -u
FORMULA_DIR=$(dirname $0)
ARG0=${0##*/}

if [[ -e $FORMULA_DIR/rabbitmq-common ]] ; then
  . $FORMULA_DIR/rabbitmq-common
else
  ensemble-log "rabbitmq: ERROR Could not load $FORMULA_DIR/rabbitmq-common"
  exit 1
fi

ensemble-log "rabbitmq: Firing hook $ARG0."

function install_hook() {
  DEFAULT_ETH=$(ip route  | grep default | awk '{ print $5 }')
  IP=$(ifconfig  $DEFAULT_ETH | grep 'inet addr' | awk '{ print $2 }' | cut -d: -f2)

  if ! cat /etc/hosts | grep "$IP $HOSTNAME" >>/dev/null; then
    echo "Updating /etc/hosts"
    echo $IP $HOSTNAME >> /etc/hosts
  fi

  [[ ! `which pwgen` ]] && apt-get -y install pwgen

  DEBIAN_FRONTEND=noninteractive apt-get -qqy \
    install --no-install-recommends rabbitmq-server
  rc=$?
  ensemble-log "rabbitmq: Installation complete. $rc"
  service rabbitmq-server stop
}

function amqp_changed() {
  # Connecting clients should request a username.
  # In reponse, we generate a password for new users,
  # grant the user access on the default vhost "/",
  # and tell it where to reach us.
  RABBIT_USER=`relation-get username`
  [[ -z $RABBIT_USER ]] && exit 0
  PASSWD_FILE="/var/run/ensemble/$RABBIT_USER.passwd"
  if [[ -e $PASSWD_FILE ]] ; then
    PASSWORD=$(cat $PASSWD_FILE)
  else
    PASSWORD=$(pwgen 10 1)
    echo $PASSWORD >$PASSWD_FILE
    chmod 0400 $PASSWD_FILE
  fi
  if ! user_exists $RABBIT_USER ; then
    user_create $RABBIT_USER admin || exit 1
  else
    ensemble-log "rabbitmq: user $RABBIT_USER already exists."
  fi
  ensemble-log "rabbitmq: Returning credentials for $RABBIT_USER@$HOSTNAME"
  relation-set hostname=$HOSTNAME
  relation-set password=$PASSWORD
}

case $ARG0 in
  "install") install_hook ;;
  "start") service rabbitmq-server status || service rabbitmq-server start ;;
  "stop") service rabbitmq-server status && service rabbitmq-server stop ;;
  "amqp-relation-joined") exit 0 ;;
  "amqp-relation-changed") amqp_changed ;;
esac
rc=$?
ensemble-log "rabbitmq: Hook $ARG0 complete. Exiting $rc"
exit $rc
